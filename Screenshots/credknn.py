# -*- coding: utf-8 -*-
"""CredKNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vfFvvyjDc3Og22BuI0yl3oCpzkC3uG0S

CREDIT CARD FRAUD DETECTION USING K-Nearest Neighbors (KNN) algorithm
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np

import seaborn as sns
import matplotlib.pylab as plt

# %matplotlib inline

!unzip -qq /content/archive.zip

credit_card_data = pd.read_csv('creditcard.csv')

credit_card_data.head()

credit_card_data.tail()

credit_card_data.info()

credit_card_data.describe()

credit_card_data.describe().transpose()

credit_card_data.isnull().sum()

credit_card_data.hist(figsize=(20,20))

"""# **standardize the variables**"""

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()

X = pd.DataFrame(scaler.fit_transform(credit_card_data.drop(["Class"],axis = 1)))
y = credit_card_data.Class

X.head()

"""# *Train Test Split*"""

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.30)

"""Using KNN"""

from sklearn.neighbors import KNeighborsClassifier

knn = KNeighborsClassifier(n_neighbors=1)

knn.fit(X_train,y_train)

pred = knn.predict(X_test)

"""# **Predictions and Evaluations**"""

from sklearn.metrics import classification_report,confusion_matrix

print(confusion_matrix(y_test,pred))

print(classification_report(y_test,pred))

#Orginal K=1
knn = KNeighborsClassifier(n_neighbors=1)

knn.fit(X_train,y_train)
pred = knn.predict(X_test)

print('WITH k=1')
print('\n')
print(confusion_matrix(y_test,pred))
print('\n')
print(classification_report(y_test,pred))

from sklearn.metrics import ConfusionMatrixDisplay
import matplotlib.pyplot as plt

conf_matrix = confusion_matrix(y_test, pred)
vis = ConfusionMatrixDisplay(confusion_matrix = conf_matrix,display_labels = [True,False])
vis.plot()
plt.grid(False)
plt.show()

